// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Sat, 20 Nov 2021 18:13:09 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package hackrf

/*
#cgo CFLAGS: -msse4.1 -Wall -fPIC -I. -I.. -I../host/libhackrf/src
#cgo LDFLAGS: -lm -lusb-1.0 ${SRCDIR}/../host/build/libhackrf/src/libhackrf.a
#include <inttypes.h>
#include <complex.h>
#include "host/libhackrf/src/hackrf.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"

const (
	// HackRFOne as defined in hackrf/<predefine>:26
	HackRFOne = 1
	// HackRFOperacakeAddressInvalid as defined in src/hackrf.h:53
	HackRFOperacakeAddressInvalid = 255
	// HackRFOperacakeMaxBoards as defined in src/hackrf.h:54
	HackRFOperacakeMaxBoards = 8
	// HackRFOperacakeMaxDwellTimes as defined in src/hackrf.h:55
	HackRFOperacakeMaxDwellTimes = 16
	// HackRFOperacakeMaxFreqRanges as defined in src/hackrf.h:56
	HackRFOperacakeMaxFreqRanges = 8
)

// Error enumeration from src/hackrf.h:58
const (
	HackRFSuccess                  = iota
	HackRFTrue                     = 1
	HackRFErrorInvalidParam        = -2
	HackRFErrorNotFound            = -5
	HackRFErrorBusy                = -6
	HackRFErrorNoMem               = -11
	HackRFErrorLibUSB              = -1000
	HackRFErrorThread              = -1001
	HackRFErrorStreamingThreadErr  = -1002
	HackRFErrorStreamingStopped    = -1003
	HackRFErrorStreamingExitCalled = -1004
	HackRFErrorUSBAPIVersion       = -1005
	HackRFErrorNotLastDevice       = -2000
	HackRFErrorOther               = -9999
)

// BoardId as declared in src/hackrf.h:75
type BoardId int32

// BoardId enumeration from src/hackrf.h:75
const (
	BoardIDJellybean  = iota
	BoardIDJawbreaker = 1
	BoardIDHackRFOne  = 2
	BoardIDRad1o      = 3
	BoardIDInvalid    = 255
)

// USBBoardId as declared in src/hackrf.h:83
type USBBoardId int32

// USBBoardId enumeration from src/hackrf.h:83
const (
	USBBoardIDJawbreaker = 24651
	USBBoardIDHackRFOne  = 24713
	USBBoardIDRad1o      = 52245
	USBBoardIDInvalid    = 65535
)

// RfPathFilter as declared in src/hackrf.h:90
type RfPathFilter int32

// RfPathFilter enumeration from src/hackrf.h:90
const (
	RfPathFilterBypass   = iota
	RfPathFilterLowPass  = 1
	RfPathFilterHighPass = 2
)

// OperacakePorts as declared in src/hackrf.h:96
type OperacakePorts int32

// OperacakePorts enumeration from src/hackrf.h:96
const (
	OperacakePa1 = iota
	OperacakePa2 = 1
	OperacakePa3 = 2
	OperacakePa4 = 3
	OperacakePb1 = 4
	OperacakePb2 = 5
	OperacakePb3 = 6
	OperacakePb4 = 7
)

// OperacakeSwitchingMode as declared in src/hackrf.h:107
type OperacakeSwitchingMode int32

// OperacakeSwitchingMode enumeration from src/hackrf.h:107
const (
	OperacakeModeManual    = iota
	OperacakeModeFrequency = 1
	OperacakeModeTime      = 2
)

// SweepStyle as declared in src/hackrf.h:122
type SweepStyle int32

// SweepStyle enumeration from src/hackrf.h:122
const (
	Linear      = iota
	Interleaved = 1
)
